pragma solidity ^0.4.25; //declaration of current version of solidity

contract ZombieFactory { // class name

    event NewZombie(uint zombieId, string name, uint dna); // creating events

    uint dnaDigits = 16; // assigning global variable
    uint dnaModulus = 10 ** dnaDigits; // assigning global variable

    struct Zombie {     
        string name;
        uint dna;
    }

    Zombie[] public zombies;

    function _createZombie(string _name, uint _dna) private {
       uint id = zombies.push(Zombie(_name, _dna)) - 1;
        emit NewZombie(id, _name, _dna); // calling the events
    }       

    //creating functions in private with data
    function _generateRandomDna(string _str) private view returns (uint) { 
        uint rand = uint(keccak256(abi.encodePacked(_str)));
        return rand % dnaModulus; 
    }

    function createRandomZombie(string _name) public {
        uint randDna = _generateRandomDna(_name);
        _createZombie(_name, randDna);
    }

}
